name: pull request checks

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: install
        run: npm ci
      - name: build
        run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/walletkit/dist
            packages/pos-client/dist

  code_style:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        style-command:
          - lint
          - prettier
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: install
        run: npm ci
      - name: check
        run: npm run ${{ matrix.style-command }}

  test:
    needs: [build, code_style]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-prefix:
          - packages/walletkit
          - packages/pos-client
    env:
      TEST_RELAY_URL: ${{ secrets.TEST_RELAY_URL }}
      TEST_PROJECT_ID: ${{ secrets.TEST_PROJECT_ID }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: install
        run: npm ci
      - uses: actions/download-artifact@v4
        with:
          name: build-artifacts
      - run: npm run test --prefix=${{ matrix.test-prefix }}
